package view;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JPanel;

import java.awt.Color;

import model.Board;
import model.TetrisPiece;

public class NextPiecePanel extends JPanel implements Observer {
    private static final int BLOCK_SIZE = 20;
    
    private static final int PANEL_SIZE = 60;
    
    protected Board myBoard;
    
    private int myBlockSize;
        
    private int myPanelSize;
    
    public NextPiecePanel (final Board theBoard) {
        super();
        
        myBlockSize = BLOCK_SIZE;
        myPanelSize = PANEL_SIZE;
        
        setPreferredSize(new Dimension(myPanelSize, myPanelSize));
        
        setBackground(Color.WHITE);
        
        myBoard = theBoard;
        myBoard.addObserver(this);
        
    }
    
    public void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        
    }
    
    private void drawNextPiece(final Graphics2D theG2d) {
        final TetrisPiece nextPiece = myBoard.getNextPiece();
        
    }
    
    public void update(final Observable theObject, final Object theArgument) {
        repaint();
    }

}
